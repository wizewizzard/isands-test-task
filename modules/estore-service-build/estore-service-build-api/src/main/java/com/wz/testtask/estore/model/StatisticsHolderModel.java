/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.wz.testtask.estore.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.model.BaseModel;
import com.liferay.portal.kernel.model.MVCCModel;

import org.osgi.annotation.versioning.ProviderType;

/**
 * The base model interface for the StatisticsHolder service. Represents a row in the &quot;ESTORE_StatisticsHolder&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation <code>com.wz.testtask.estore.model.impl.StatisticsHolderModelImpl</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in <code>com.wz.testtask.estore.model.impl.StatisticsHolderImpl</code>.
 * </p>
 *
 * @author wz
 * @see StatisticsHolder
 * @generated
 */
@ProviderType
public interface StatisticsHolderModel
	extends BaseModel<StatisticsHolder>, MVCCModel {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a statistics holder model instance should use the {@link StatisticsHolder} interface instead.
	 */

	/**
	 * Returns the primary key of this statistics holder.
	 *
	 * @return the primary key of this statistics holder
	 */
	public String getPrimaryKey();

	/**
	 * Sets the primary key of this statistics holder.
	 *
	 * @param primaryKey the primary key of this statistics holder
	 */
	public void setPrimaryKey(String primaryKey);

	/**
	 * Returns the mvcc version of this statistics holder.
	 *
	 * @return the mvcc version of this statistics holder
	 */
	@Override
	public long getMvccVersion();

	/**
	 * Sets the mvcc version of this statistics holder.
	 *
	 * @param mvccVersion the mvcc version of this statistics holder
	 */
	@Override
	public void setMvccVersion(long mvccVersion);

	/**
	 * Returns the stat name of this statistics holder.
	 *
	 * @return the stat name of this statistics holder
	 */
	@AutoEscape
	public String getStatName();

	/**
	 * Sets the stat name of this statistics holder.
	 *
	 * @param statName the stat name of this statistics holder
	 */
	public void setStatName(String statName);

	/**
	 * Returns the result of this statistics holder.
	 *
	 * @return the result of this statistics holder
	 */
	public long getResult();

	/**
	 * Sets the result of this statistics holder.
	 *
	 * @param result the result of this statistics holder
	 */
	public void setResult(long result);

}