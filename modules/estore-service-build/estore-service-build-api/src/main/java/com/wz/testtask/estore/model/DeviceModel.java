/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.wz.testtask.estore.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.model.BaseModel;
import com.liferay.portal.kernel.model.MVCCModel;
import com.liferay.portal.kernel.model.ShardedModel;

import org.osgi.annotation.versioning.ProviderType;

/**
 * The base model interface for the Device service. Represents a row in the &quot;ESTORE_Device&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation <code>com.wz.testtask.estore.model.impl.DeviceModelImpl</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in <code>com.wz.testtask.estore.model.impl.DeviceImpl</code>.
 * </p>
 *
 * @author wz
 * @see Device
 * @generated
 */
@ProviderType
public interface DeviceModel
	extends BaseModel<Device>, MVCCModel, ShardedModel {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a device model instance should use the {@link Device} interface instead.
	 */

	/**
	 * Returns the primary key of this device.
	 *
	 * @return the primary key of this device
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this device.
	 *
	 * @param primaryKey the primary key of this device
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the mvcc version of this device.
	 *
	 * @return the mvcc version of this device
	 */
	@Override
	public long getMvccVersion();

	/**
	 * Sets the mvcc version of this device.
	 *
	 * @param mvccVersion the mvcc version of this device
	 */
	@Override
	public void setMvccVersion(long mvccVersion);

	/**
	 * Returns the uuid of this device.
	 *
	 * @return the uuid of this device
	 */
	@AutoEscape
	public String getUuid();

	/**
	 * Sets the uuid of this device.
	 *
	 * @param uuid the uuid of this device
	 */
	public void setUuid(String uuid);

	/**
	 * Returns the device ID of this device.
	 *
	 * @return the device ID of this device
	 */
	public long getDeviceId();

	/**
	 * Sets the device ID of this device.
	 *
	 * @param deviceId the device ID of this device
	 */
	public void setDeviceId(long deviceId);

	/**
	 * Returns the group ID of this device.
	 *
	 * @return the group ID of this device
	 */
	public long getGroupId();

	/**
	 * Sets the group ID of this device.
	 *
	 * @param groupId the group ID of this device
	 */
	public void setGroupId(long groupId);

	/**
	 * Returns the company ID of this device.
	 *
	 * @return the company ID of this device
	 */
	@Override
	public long getCompanyId();

	/**
	 * Sets the company ID of this device.
	 *
	 * @param companyId the company ID of this device
	 */
	@Override
	public void setCompanyId(long companyId);

	/**
	 * Returns the name of this device.
	 *
	 * @return the name of this device
	 */
	@AutoEscape
	public String getName();

	/**
	 * Sets the name of this device.
	 *
	 * @param name the name of this device
	 */
	public void setName(String name);

	/**
	 * Returns the device type ID of this device.
	 *
	 * @return the device type ID of this device
	 */
	public long getDeviceTypeId();

	/**
	 * Sets the device type ID of this device.
	 *
	 * @param deviceTypeId the device type ID of this device
	 */
	public void setDeviceTypeId(long deviceTypeId);

	/**
	 * Returns the price of this device.
	 *
	 * @return the price of this device
	 */
	public long getPrice();

	/**
	 * Sets the price of this device.
	 *
	 * @param price the price of this device
	 */
	public void setPrice(long price);

	/**
	 * Returns the count of this device.
	 *
	 * @return the count of this device
	 */
	public int getCount();

	/**
	 * Sets the count of this device.
	 *
	 * @param count the count of this device
	 */
	public void setCount(int count);

	/**
	 * Returns the in stock of this device.
	 *
	 * @return the in stock of this device
	 */
	public boolean getInStock();

	/**
	 * Returns <code>true</code> if this device is in stock.
	 *
	 * @return <code>true</code> if this device is in stock; <code>false</code> otherwise
	 */
	public boolean isInStock();

	/**
	 * Sets whether this device is in stock.
	 *
	 * @param inStock the in stock of this device
	 */
	public void setInStock(boolean inStock);

	/**
	 * Returns the archive of this device.
	 *
	 * @return the archive of this device
	 */
	public boolean getArchive();

	/**
	 * Returns <code>true</code> if this device is archive.
	 *
	 * @return <code>true</code> if this device is archive; <code>false</code> otherwise
	 */
	public boolean isArchive();

	/**
	 * Sets whether this device is archive.
	 *
	 * @param archive the archive of this device
	 */
	public void setArchive(boolean archive);

	/**
	 * Returns the description of this device.
	 *
	 * @return the description of this device
	 */
	@AutoEscape
	public String getDescription();

	/**
	 * Sets the description of this device.
	 *
	 * @param description the description of this device
	 */
	public void setDescription(String description);

}